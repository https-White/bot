import disnake
from disnake.ext import commands
from disnake import TextInputStyle
from config import qiwi_token, admins_ids, logid, roleid, guildid, iconurl, supporturl
import sqlite3
import random
from pyqiwip2p import QiwiP2P
import asyncio

db = sqlite3.connect("db")
cursor = db.cursor()

cursor.execute("CREATE TABLE IF NOT EXISTS shop (id INT, name TEXT, price INT, tovar TEXT, status INT)")
cursor.execute("CREATE TABLE IF NOT EXISTS users (id BIGINT, shopping INT, balance INT)")
cursor.execute("CREATE TABLE IF NOT EXISTS checks (userid BIGINT, checkid VARCHAR, money INT)")
cursor.execute("CREATE TABLE IF NOT EXISTS promocode (pc TEXT, value INT, count INT, userid BIGINT)")

p2p = QiwiP2P(auth_key=qiwi_token)

class ShopSystem(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot

    #/start
    @commands.slash_command(description='–ú–µ–Ω—é –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π')
    async def start(self, inter):
        embed = disnake.Embed(title='–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é', description='–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é', color=disnake.Color.from_rgb(47,49,54))
        embed.set_thumbnail(url=iconurl) #–¢—É—Ç –∫–∞—Ä—Ç–∏–Ω–∫—É –ø–æ—Å—Ç–∞–≤–∏—Ç—å
        await inter.response.send_message(embed=embed, components=[
            disnake.ui.Button(label="–ú–∞–≥–∞–∑–∏–Ω", style=disnake.ButtonStyle.success, custom_id="bshop", emoji='üõçÔ∏è'),
            disnake.ui.Button(label="–ü—Ä–æ—Ñ–∏–ª—å", style=disnake.ButtonStyle.blurple, custom_id="bprofile", emoji='üë•'),
            [disnake.ui.Button(label="–ü–æ–¥–¥–µ—Ä–∂–∫–∞", style=disnake.ButtonStyle.primary, emoji='üí§', url=supporturl)]
        ])

    #/ashop
    @commands.command()
    async def ashop(self, inter):
        if inter.author.id in admins_ids:
            prods = cursor.execute("SELECT id, name, price FROM shop WHERE status = 0").fetchall()
            embed = disnake.Embed(title='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ú–∞–≥–∞–∑–∏–Ω–æ–º', description='–¢–æ–≤–∞—Ä—ã: ', color=disnake.Color.from_rgb(47,49,54))
            for prod in prods:
                embed.add_field(name=prod[1], value=f'–¶–µ–Ω–∞: {prod[2]}‚ÇΩ | ID: {prod[0]}', inline=False)
            await inter.send(embed=embed, components=[
                disnake.ui.Button(label="–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä", style=disnake.ButtonStyle.success, custom_id="sadd"),
                disnake.ui.Button(label="–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä", style=disnake.ButtonStyle.danger, custom_id="sremove"),
                [disnake.ui.Button(label="–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥", style=disnake.ButtonStyle.success, custom_id="baddpc"), 
                disnake.ui.Button(label="–í—ã–¥–∞—Ç—å –±–∞–ª–∞–Ω—Å", style=disnake.ButtonStyle.secondary, custom_id="setbal")]])
        else:
            await inter.send("–£—Ö, –Ω—É —è –¥—É–º–∞—é —Ç–µ–±–µ —ç—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ —Å—Ç–æ–∏—Ç! \n –•–æ—á–µ—à—å –∫—É–ø–∏—Ç—å –±–æ—Ç–∞? - RoFliN#0939")

    @commands.Cog.listener()
    async def on_dropdown(self, inter: disnake.MessageInteraction):
        tovar = cursor.execute(f"SELECT id, price, tovar FROM shop WHERE name = '{inter.values[0]}' AND status = 0").fetchone()
        if tovar:
            user = cursor.execute(f"SELECT balance, shopping FROM users WHERE id = {inter.author.id}").fetchone()
            if user:
                if user[0] >= tovar[1]:
                    embed = disnake.Embed(title='–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å?', description=f'{inter.values[0]} –∑–∞ {tovar[1]}‚ÇΩ \n –£ –≤–∞—Å –µ—Å—Ç—å 1 –º–∏–Ω—É—Ç–∞ –Ω–∞ —Ä–µ—à–µ–Ω–∏–µ!', color=disnake.Color.from_rgb(47,49,54))
                    embed.set_footer(text='–ü—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–ª–∏')
                    await inter.response.send_message(embed=embed, components=[
                        disnake.ui.Button(label='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', style=disnake.ButtonStyle.success, custom_id='accept', emoji='‚úÖ')
                    ], ephemeral=True)
                    try:
                        cursor.execute(f"UPDATE shop SET status = 1 WHERE id = {tovar[0]}")
                        db.commit()
                        interb = await self.bot.wait_for('button_click', timeout=60)
                        balance = user[0] - tovar[1]
                        shopi = user[1] + 1
                        cursor.execute(f"UPDATE users SET balance = {balance}, shopping = {shopi} WHERE id = {inter.author.id}")
                        cursor.execute(f"DELETE FROM shop WHERE id = {tovar[0]}")
                        db.commit()
                        await interb.send(tovar[2], ephemeral=True)
                        log_channel = await self.bot.fetch_channel(logid)
                        embed = disnake.Embed(title="–ù–æ–≤–∞—è –ø–æ–∫—É–ø–∫–∞", description=f"–ü–æ–∫—É–ø–∞—Ç–µ–ª—å: <@{inter.author.id}> \n–¢–æ–≤–∞—Ä: {inter.values[0]}", color=disnake.Color.from_rgb(47,49,54))
                        await log_channel.send(embed=embed)
                        guild = await self.bot.fetch_guild(guildid)
                        role = guild.get_role(roleid)
                        print(role, guild)
                        await inter.author.add_roles(role)
                    except:
                        cursor.execute(f"UPDATE shop SET status = 0 WHERE id = {tovar[0]}")
                        db.commit()
                        return
                else:
                    await inter.response.send_message('–í–∞–º –Ω–µ—Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥, –ø–æ–ø–æ–ª–Ω–∏—Ç–µ —Å—á—ë—Ç! | /start > –ø—Ä–æ—Ñ–∏–ª—å > –ø–æ–ø–æ–ª–Ω–∏—Ç—å', ephemeral=True) 
            else:
                cursor.execute(f"INSERT INTO users (id, shopping, balance) VALUES ({inter.author.id}, 0, 0)")
                db.commit()
                await inter.response.send_message('–í–∞–º –Ω–µ—Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥, –ø–æ–ø–æ–ª–Ω–∏—Ç–µ —Å—á—ë—Ç! | /start > –ø—Ä–æ—Ñ–∏–ª—å > –ø–æ–ø–æ–ª–Ω–∏—Ç—å', ephemeral=True) 
        else:
            await inter.response.send_message('–¢–æ–≤–∞—Ä —É–∂–µ –ø—Ä–æ–¥–∞–Ω.', ephemeral=True)

    @commands.Cog.listener("on_button_click")
    async def menu_listener(self, inter: disnake.MessageInteraction):
        if inter.component.custom_id == "bshop":
            try:
                prods = cursor.execute("SELECT id, name, price FROM shop WHERE status = 0").fetchall()
                embed = disnake.Embed(title='–ú–∞–≥–∞–∑–∏–Ω', description='–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã', color=disnake.Color.from_rgb(47,49,54))
                names = []
                for prod in prods:
                    names.append(prod[1])
                dev = []
                options = []
                for prod in prods:
                    if names.count(f"{prod[1]}") > 1:
                        embed.add_field(name=prod[1], value=f'–¶–µ–Ω–∞: {prod[2]}‚ÇΩ | –ö–æ–ª-–≤–æ: {names.count(f"{prod[1]}")}', inline=False)
                        options.append(disnake.SelectOption(
                            label=prod[1], description=f"–¶–µ–Ω–∞: {prod[2]}‚ÇΩ | –ö–æ–ª-–≤–æ: {names.count(f'{prod[1]}')}", emoji='üõí'))
                        for i in range(names.count(f"{prod[1]}")):
                            names.remove(prod[1])
                        dev.append(prod[1])
                    else:
                        if prod[1] in dev:
                            pass
                        else:
                            embed.add_field(name=prod[1], value=f'–¶–µ–Ω–∞: {prod[2]}‚ÇΩ | –ö–æ–ª-–≤–æ: 1', inline=False)
                            options.append(disnake.SelectOption(
                            label=prod[1], description=f"–¶–µ–Ω–∞: {prod[2]}‚ÇΩ | –ö–æ–ª-–≤–æ: 1", emoji='üõí'))
                await inter.response.send_message(embed=embed, ephemeral=True, components=[disnake.ui.Select(placeholder='–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä', min_values=1, max_values=1, options=options)])
            except:
              await inter.response.send_message(embed=embed, ephemeral=True)

        if inter.component.custom_id == 'baddpc':
            await inter.response.send_modal(title='–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥', custom_id='addpc', components=[
                disnake.ui.TextInput(
                    label="–ü—Ä–æ–º–æ–∫–æ–¥",
                    placeholder="PROMOCODE",
                    custom_id="pc",
                    style=TextInputStyle.short
                ),
                disnake.ui.TextInput(
                    label="–ü—Ä–æ—Ü–µ–Ω—Ç—ã",
                    placeholder="000",
                    custom_id="pcval",
                    style=TextInputStyle.short
                ),
                disnake.ui.TextInput(
                    label="–ö–æ–ª-–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π",
                    placeholder="10",
                    custom_id="pcount",
                    style=TextInputStyle.short
                )
            ])

        if inter.component.custom_id == 'bprofile':
            user = cursor.execute(f"SELECT shopping, balance FROM users WHERE id = {inter.author.id}").fetchone()
            if not user:
                cursor.execute(f"INSERT INTO users (id, shopping, balance) VALUES ({inter.author.id}, 0, 0)")
                db.commit()
                user = cursor.execute(f"SELECT shopping, balance FROM users WHERE id = {inter.author.id}").fetchone()
            embed = disnake.Embed(title=f'–ü—Ä–æ—Ñ–∏–ª—å - {inter.author}', description=f'\n **–ë–∞–ª–∞–Ω—Å: {user[1]}‚ÇΩ** \n**–ö—É–ø–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {user[0]}**', color=disnake.Color.from_rgb(47,49,54))
            embed.set_thumbnail(url=inter.author.avatar.url)
            await inter.response.send_message(embed=embed, ephemeral=True, components=[
                disnake.ui.Button(label="–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", style=disnake.ButtonStyle.success, custom_id="addbal")
            ])

        if inter.component.custom_id == 'addbal':
            await inter.response.send_modal(title='–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å', custom_id='gencheck', components=[
                disnake.ui.TextInput(
                    label="–°—É–º–º–∞",
                    placeholder="–¢–æ–ª—å–∫–æ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞!",
                    required=True,
                    custom_id="summa",
                    style=TextInputStyle.short
                ),
                disnake.ui.TextInput(
                    label="–ü—Ä–æ–º–æ–∫–æ–¥",
                    placeholder="–ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ",
                    custom_id="promocode",
                    required=False,
                    style=TextInputStyle.short
                )
            ])
        if inter.component.custom_id == "sadd":
            await inter.response.send_modal(title='–î–æ–±–∞–≤–∏—Ç—å –¢–æ–≤–∞—Ä', custom_id='addprod', components = [
                disnake.ui.TextInput(
                    label="–ù–∞–∑–≤–∞–Ω–∏–µ",
                    placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞",
                    custom_id="name",
                    style=TextInputStyle.short,
                ),
                disnake.ui.TextInput(
                    label="–°–æ–¥–µ—Ä–∂–∏–º–æ–µ",
                    placeholder="–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–æ–≤–∞—Ä–∞",
                    custom_id="tovar",
                    style=TextInputStyle.paragraph,
                ),
                disnake.ui.TextInput(
                    label="–¶–µ–Ω–∞",
                    placeholder="–¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞",
                    custom_id="price",
                    style=TextInputStyle.short,
                ),
            ])
        if inter.component.custom_id == "sremove":
            await inter.response.send_modal(title='–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä', custom_id='removeprod', components = [
                disnake.ui.TextInput(
                    label="ID",
                    placeholder="ID –¢–æ–≤–∞—Ä–∞",
                    custom_id="id",
                    style=TextInputStyle.short,
                )
            ])
        if inter.component.custom_id == "setbal":
            await inter.response.send_modal(title="–í—ã–¥–∞—Ç—å –±–∞–ª–∞–Ω—Å", custom_id="msetbal", components=[
                disnake.ui.TextInput(
                    label="–ê–π–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞",
                    placeholder="000000000000000",
                    custom_id="userid",
                    style=TextInputStyle.short,
                ),
                                disnake.ui.TextInput(
                    label="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–Ω–µ–≥",
                    placeholder="00000",
                    custom_id="amount",
                    style=TextInputStyle.short,
                )
            ])

    @commands.Cog.listener()
    async def on_modal_submit(self, inter: disnake.ModalInteraction):
        if inter.custom_id == "addpc":
            cursor.execute(f"INSERT INTO promocode (pc, value, count, userid) VALUES ('{inter.text_values['pc']}', {inter.text_values['pcval']}, {inter.text_values['pcount']}, {inter.author.id})")
            db.commit()
            await inter.response.send_message(f"–î–æ–±–∞–≤–ª–µ–Ω –ø—Ä–æ–º–æ–∫–æ–¥: {inter.text_values['pc']}")

        if inter.custom_id == "addprod":
            cursor.execute(f"INSERT INTO shop (id, name, price, tovar, status) VALUES ({random.randint(0, 999999)}, '{inter.text_values['name']}', {inter.text_values['price']}, '{inter.text_values['tovar']}', 0)")
            db.commit()
            await inter.response.send_message(f"–î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä: {inter.text_values['name']}", ephemeral=True)
        if inter.custom_id == "removeprod":
            cursor.execute(f"DELETE FROM shop WHERE id = {inter.text_values['id']}")
            db.commit()
            await inter.response.send_message("–£–¥–∞–ª–µ–Ω–æ", ephemeral=True)

        if inter.custom_id == "msetbal":
            try:
                bal = cursor.execute(f"SELECT balance FROM users WHERE id = {int(inter.text_values['userid'])}").fetchone()
                fullbal = int(bal[0]) + int(inter.text_values['amount'])
                cursor.execute(f"UPDATE users SET balance = {fullbal} WHERE id = {inter.text_values['userid']}")
                await inter.response.send_message(f"–í—ã–¥–∞–ª —é–∑–µ—Ä—É <@{inter.text_values['userid']}> {inter.text_values['amount']}–†")
                log_channel = await self.bot.fetch_channel(logid)
                embed = disnake.Embed(title="–í—ã–¥–∞–Ω –±–∞–ª–∞–Ω—Å", description=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <@{inter.text_values['userid']}> \n–°—É–º–º–∞: {inter.text_values['amount']}‚ÇΩ \n –ê–¥–º–∏–Ω: {inter.author.mention}", color=disnake.Color.from_rgb(47,49,54))
                await log_channel.send(embed=embed)
            except:
                await inter.response.send_message(f"–ü–æ—Ö–æ–∂–µ —é–∑–µ—Ä–∞ –Ω–µ—Ç—É –≤ –±–¥ –∏ –æ–Ω –µ—â—ë –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –±–æ—Ç–∞")
        
        if inter.custom_id == "gencheck":
            try:
                summa = int(inter.text_values['summa'])
                summaop = int(inter.text_values['summa'])
                if inter.text_values['promocode'] != '':
                    pc = cursor.execute(f"SELECT value, count FROM promocode WHERE pc = '{inter.text_values['promocode']}'").fetchone()
                    if pc and pc[1] >= 1:
                        bonus = summa * pc[0] / 100
                        summa = int(round(summa + bonus))
                        pcount = pc[1] - 1
                        if pcount <= 0:
                            cursor.execute(f"DELETE FROM promocode WHERE pc = '{inter.text_values['promocode']}'")
                            db.commit()
                        else:
                            cursor.execute(f"UPDATE promocode SET count = {pcount} WHERE pc = '{inter.text_values['promocode']}'")
                            db.commit()
                    else:
                        pass

                comment = f'{inter.author.id}_{random.randint(10000, 99999)}'
                bill = p2p.bill(amount=summaop, lifetime=2, comment=comment)
                cursor.execute(f"INSERT INTO checks (userid, checkid, money) VALUES ({inter.author.id}, '{bill.bill_id}', {summa})")
                db.commit()
                embed = disnake.Embed(title='–û–ø–ª–∞—Ç–∞ —Å—á—ë—Ç–∞', description=f'**–û–ø–ª–∞—Ç–∏—Ç–µ:** {summaop}‚ÇΩ \n **–ü–æ–ª—É—á–∏—Ç–µ:** {summa}‚ÇΩ', color=disnake.Color.from_rgb(47,49,54))
                await inter.response.send_message(embed=embed, ephemeral=True, components=[
                    disnake.ui.Button(label='–û–ø–ª–∞—Ç–∏—Ç—å', style=disnake.ButtonStyle.success, url=bill.pay_url)
                ])
            except:
                await inter.response.send_message("–ò—à–∞–∫ —Ç—É–ø–æ–π –≤–≤–æ–¥–∏ —Ç–æ–ª—å–∫–æ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞ –≤ —Å—É–º–º—É! >:(")

async def checkoplata(bot):
    while True:
        await asyncio.sleep(30)
        oplats = cursor.execute("SELECT userid, checkid, money FROM checks").fetchall()
        for oplata in oplats:
            if str(p2p.check(bill_id=oplata[1]).status) == "PAID":
                user = cursor.execute(f"SELECT balance FROM users WHERE id = {oplata[0]}").fetchone()
                newbal = int(user[0]) + int(oplata[2])
                cursor.execute(f"UPDATE users SET balance = {newbal} WHERE id = {oplata[0]}")
                cursor.execute(f"DELETE FROM checks WHERE checkid = '{oplata[1]}'")
                db.commit()
                log_channel = await bot.fetch_channel(logid)
                member = await bot.fetch_user(int(oplata[0]))
                await member.send(f"–í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ {oplata[2]} –†—É–±–ª–µ–π!")
                embed = disnake.Embed(title="–ü–æ–ø–æ–ª–Ω–µ–Ω –±–∞–ª–∞–Ω—Å", description=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <@{oplata[0]}> \n–°—É–º–º–∞: {oplata[2]}", color=disnake.Color.from_rgb(47,49,54))
                await log_channel.send(embed=embed)
            elif str(p2p.check(bill_id=oplata[1]).status) == "EXPIRED":
                cursor.execute(f"DELETE FROM checks WHERE checkid = '{oplata[1]}'")
                db.commit()
 
def setup(bot: commands.Bot):
    bot.add_cog(ShopSystem(bot))
    bot.loop.create_task(checkoplata(bot))
